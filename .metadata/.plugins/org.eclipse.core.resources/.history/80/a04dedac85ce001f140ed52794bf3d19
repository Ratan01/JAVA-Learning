String:
-------
- In Java, a String is a class in the java.lang package that represents a sequence of characters. 
- Strings are immutable in Java, meaning that once a String object is created, its value cannot be changed. 
- If you modify a String, a new String object is created.

Creating a String:
------------------
You can create a String in two main ways:

1. Using string literals:
   String str1 = "Hello, World!";
   String literals are stored in the String pool, a special memory area.
   
2. Using the new keyword:
   String str2 = new String("Hello, World!");
   This creates a new object in the heap, even if the same content exists in the String pool.
   
Common Methods in the String Class:
-----------------------------------
Here are some commonly used methods:

1. Length of a String:
   int length = str.length();
   
2. Concatenate Strings:
   String result = str1.concat(str2);  // Or use `+`: String result = str1 + str2;
   
3. Character at a Position:
   char ch = str.charAt(3);
   
4. Substring:
   String sub = str.substring(0, 5);
   
5. Contains:
   boolean contains = str.contains("World");
   
6. Replace:
   String replaced = str.replace("World", "Java");
   
7. To Upper/Lower Case:
   String upper = str.toUpperCase();
   String lower = str.toLowerCase();
   
8. Trim Whitespace:
   String trimmed = str.trim();
   
9. Split:
   String[] parts = str.split(" ");
   
10. Equality Check:
    boolean isEqual = str1.equals(str2);        // Case-sensitive
    boolean isEqualIgnoreCase = str1.equalsIgnoreCase(str2);      // Case-insensitive
    
11. Index of a Character or Substring:
    int index = str.indexOf('o');
    int lastIndex = str.lastIndexOf("World");
    
12. Is Empty:
    boolean isEmpty = str.isEmpty();
    
13. startsWith() and endsWith()
    String s="Raju"; 
    s.startsWith("Ra");    //true    
    s.endsWith("u");       //true     
    
14. intern():
    String sentence = s.intern();
    
15. valueOf()
    String s=String.valueOf(a);     
    
Immutability Example:
---------------------
String str = "Hello";
str.concat(", World!");
System.out.println(str); // Outputs: Hello
- Here, the concat method does not modify str. Instead, it returns a new String object.

Special Features:
- String pool optimizes memory usage by storing a single instance of identical strings.
- Strings are widely used in Java, making String manipulation crucial in many applications.

    
    

   
   
   
   
   
   
   
   
   
   
   
   
   