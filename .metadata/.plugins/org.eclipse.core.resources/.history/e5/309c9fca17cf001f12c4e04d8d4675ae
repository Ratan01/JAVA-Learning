- The StringBuffer class in Java is a mutable sequence of characters. 
- Unlike String, which is immutable, StringBuffer objects can be modified without creating new objects. 
- It is thread-safe because its methods are synchronized, meaning it can be used safely in a multithreaded environment.

Key Features of StringBuffer:
-----------------------------
Mutability:
- The content of a StringBuffer can be modified after its creation.
- Operations like append, insert, replace, or delete directly change the object's value.

Thread-Safety:
- Methods of StringBuffer are synchronized, making it suitable for multithreaded programs.
- However, synchronization can make it slower compared to StringBuilder, which is not thread-safe.

Dynamic Size:
- A StringBuffer object grows dynamically as more characters are added.

Default Capacity:
- The default capacity of a StringBuffer is 16 characters. If the content exceeds this capacity, it is 
  automatically increased.
  
Common Constructors:
--------------------
Default Constructor:
 StringBuffer sb = new StringBuffer(); // Initial capacity: 16
 
With Initial Capacity:
 StringBuffer sb = new StringBuffer(50); // Initial capacity: 50
 
With Initial String:
 StringBuffer sb = new StringBuffer("Hello");
 
Commonly Used Methods:
----------------------
Append: Appends the specified string to the end of the existing content.
  StringBuffer sb = new StringBuffer("Hello");
  sb.append(" World");
  System.out.println(sb); // Output: Hello World
  
Insert: Inserts a string at the specified position.
  sb.insert(5, " Java");
  System.out.println(sb); // Output: Hello Java World
  
Replace: Replaces the characters in a specified range with a given string.
  sb.replace(6, 10, "Python");
  System.out.println(sb); // Output: Hello Python World
  
Delete: Removes the characters in a specified range.
  sb.delete(6, 13);
  System.out.println(sb); // Output: Hello World
  
Reverse: Reverses the character sequence.
  sb.reverse();
  System.out.println(sb); // Output: dlroW olleH
  
Capacity: Returns the current capacity of the StringBuffer.
  System.out.println(sb.capacity()); // Default: 16 or more
  
Set Length: Sets the length of the character sequence.
  sb.setLength(5);
  System.out.println(sb); // Output: Hello
  
  
  
  
  
  


 










